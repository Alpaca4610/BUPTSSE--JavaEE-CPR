package com.buptcpr.demo.controller;

import com.buptcpr.demo.DAO.StudentRepository;
import com.buptcpr.demo.DAO.TestRepository;
import com.buptcpr.demo.entity.Student;
import com.buptcpr.demo.entity.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.validation.Valid;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class TestController {

        @Autowired // This means to get the bean called userRepository
        // Which is auto-generated by Spring, we will use it to handle the data
        private TestRepository testRepository;

        @Autowired
        private StudentRepository studentRepository;

        @PostMapping(path="/testadd") // Map ONLY POST Requests
        public @ResponseBody String addNewUser (@RequestParam String name
                , @RequestParam String email) {
            // @ResponseBody means the returned String is the response, not a view name
            // @RequestParam means it is a parameter from the GET or POST request

            User n = new User();
            n.setName(name);
            n.setEmail(email);
            testRepository.save(n);
            return "Saved";
        }

        @GetMapping(path="/all")
        public @ResponseBody List<Student> getAllUsers() {
            // This returns a JSON or XML with the users
            return studentRepository.findBystudentID(new String("255"));
        }

    @PostMapping("/test1")
    @ResponseBody
    public String myvalidate(@Validated User user, BindingResult result){
        if(result.hasErrors()) {
            return "fail";
        }
        else {
            return "success";
        }
    }
    }

